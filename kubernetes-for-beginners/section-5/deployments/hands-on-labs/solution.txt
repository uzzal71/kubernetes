1. How many PODs exist on the system?
   In the current(default) namespace.
--> kubectl get pods

2. How many ReplicaSets exist on the system?
   In the current(default) namespace.
--> kubectl get replicaset

3. How many Deployments exist on the system?
   In the current(default) namespace.
--> kubectl get deployments

4. How many Deployments exist on the system now?
   We just created a Deployment! Check again!
--> kubectl get deployments

5. How many ReplicaSets exist on the system now?
--> kubectl get replicaset

6. How many PODs exist on the system now?
--> kubectl get pods

7. Out of all the existing PODs, how many are ready?
--> kubectl get pods

8. What is the image used to create the pods in the new deployment?
--> kubectl describe deployment frontend-deployment

9. Why do you think the deployment is not ready?
--> kubectl get pods
--> kubectl describe pod frontend-deployment-cd6b557c-bk745

10. Create a new Deployment using the deployment-definition-1.yaml file located at /root/.
    There is an issue with the file, so try to fix it.

controlplane ~ ➜  ls
deployment-definition-1.yaml  sample.yaml

controlplane ~ ➜  kubectl create -f deployment-definition-1.yaml
Error from server (BadRequest): error when creating "deployment-definition-1.yaml": deployment in version "v1" cannot be handled as a Deployment: no kind "deployment" is registered for version "apps/v1" in scheme "k8s.io/apimachinery@v1.32.0-k3s1/pkg/runtime/scheme.go:100"
controlplane ~ ✖ vi deployment-definition-1.yaml

controlplane ~ ➜  kubectl create -f deployment-definition-1.yaml
deployment.apps/deployment-1 created

11. Create a new Deployment with the below attributes using your own deployment definition file.
    Name: httpd-frontend;
    Replicas: 3;
    Image: httpd:2.4-alpine

deployment-definition-2.yaml
++++++++++++++++++++++++++++++++++
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      name: busybox-pod
  template:
    metadata:
      labels:
        name: busybox-pod
    spec:
      containers:
      - name: busybox-container
        image: httpd:2.4-alpin3
        command:
        - sh
        - "-c"
        - echo Hello Kubernetes! && sleep 3600

controlplane ~ ➜  kubectl create -f deployment-definition-2.yaml
deployment.apps/httpd-frontend created